let complex_expression=(s,t,u,n)=>{let trimN=r=>r.trim?r.trim():r.replace(/^\s\s*/,"").replace(/\s\s*$/,"");s=trimN(s);const consts={i:{r:0,i:1},pi:{r:Math.PI,i:0},e:{r:Math.E,i:0},phi:{r:(1+Math.pow(5,.5))/2,i:0},invphi:{r:(1-Math.pow(5,.5))/2,i:0}};let vars={m:"m",n:"n",t:"t",r:"r",s:"s",u:"u",z:"z","z'":"zp"},funcs={random:0,re:1,im:1,modulus:1,arg:1,recip:1,neg:1,conj:1,disk:1,floor:1,ceil:1,square:1,cube:1,sqrt:1,exp:1,log:1,sin:1,cos:1,tan:1,cot:1,sec:1,csc:1,sinh:1,cosh:1,tanh:1,coth:1,sech:1,csch:1,asin:1,acos:1,atan:1,acot:1,asec:1,acsc:1,asinh:1,acosh:1,atanh:1,acoth:1,asech:1,acsch:1,arcsin:1,arccos:1,arctan:1,arccot:1,arcsec:1,arccsc:1,arcsinh:1,arccosh:1,arctanh:1,arccoth:1,arcsech:1,arccsch:1,gamma:1,pow:2,rationalBlaschke:2,mobius:5,psymbol:2,binet:1,joukowsky:3,zeta:1,dirichletEta:1,binomial:2,sn:2,cn:2,dn:2,sum:2,prod:2,blaschke:2,iter:3},syns={asin:"arcsin",acos:"arccos",atan:"arctan",acot:"arccot",asec:"arcsec",acsc:"arccsc",asinh:"arcsinh",acosh:"arccosh",atanh:"arctanh",acoth:"arccoth",asech:"arcsech",acsch:"arccsch"},params=[{name:"t",defn:"{r:"+t+",i:0}",caption:function(r){return"t = "+r.toFixed(3)}},{name:"u",defn:"{r:Math.cos("+u+"),i:Math.sin("+u+")}",caption:function(r){var t=Math.sin(2*Math.PI*r)+3e-16;return"u = "+(Math.cos(2*Math.PI*r)+3e-16).toFixed(2)+(t>=0?" + ":" - ")+Math.abs(t).toFixed(2)+"i"}},{name:"n",defn:"{r:"+n+",i:0}",caption:function(r){return"n = "+Math.floor(r*r*59+1.5)}}],loops={iter:1,sum:1,prod:1},symbols={},run=()=>{dictadd(symbols,consts),dictadd(symbols,vars),dictadd(symbols,funcs),init_constants(),init_ai(),init_dk();let state={tok:tokenize(s),j:0};if(null===state.tok)return null;let result=parsesum(state,!1);if(null===result||state.j<state.tok.length)return null;let parameters=[];if(result.vars.hasOwnProperty("z'"))return null;let fntext="(function(z,par){";result.vars.hasOwnProperty("m")&&(defns+="let m = expi(z); ");for(let r=0;r<params.length;++r)result.vars.hasOwnProperty(params[r].name)&&(params[r].defn&&(fntext+="let "+params[r].name+"="+params[r].defn+";"),parameters.push({name:params[r].name,caption:params[r].caption}));return fntext+="return "+result.expr+";})",{fn:eval(fntext),fntext:fntext,parameters:parameters}},factorials=[],init_constants=()=>{factorials.push(1);for(let r=0;r<160;++r)factorials.push(factorials[factorials.length-1]*factorials.length)},mds=[],args=[],ai=[],init_ai=()=>{for(let r=0;r<100;r++)mds[r]=Math.random(),args[r]=2*Math.PI*Math.random(),ai[r]={r:mds[r]*Math.cos(args[r]),i:mds[r]*Math.sin(args[r])}},dk=[],init_dk=()=>{let r=[1];for(let t=1;t<=15;t++)r.push(r[t-1]+15*factorials[15+t-1]/factorials[15-t]/factorials[2*t]*4**t);for(let t=0;t<r.length;t++)dk[t]={r:r[t],i:0}},primeFactorsTo=r=>{let t,e,a=[],s=[];for(t=2;t<=r;++t)if(!a[t])for(s.push(t),e=t<<1;e<=r;e+=t)a[e]=!0;return s},random=()=>{for(;;){let r={r:2*Math.random()-1,i:2*Math.random()-1};if(modulussquared(r)<1)return r}},re=r=>({r:r.r,i:0}),im=r=>({r:r.i,i:0}),scale=(r,t)=>({r:t.r*r,i:t.i*r}),modulussquared=r=>r.r*r.r+r.i*r.i,realmodulus=r=>Math.sqrt(modulussquared(r)),modulus=r=>0==r.i?{r:Math.abs(r.r),i:0}:{r:realmodulus(r),i:0},realarg=r=>Math.atan2(r.i,r.r),arg=r=>({r:realarg(r),i:0}),add=(r,t)=>({r:r.r+t.r,i:r.i+t.i}),sub=(r,t)=>({r:r.r-t.r,i:r.i-t.i}),mult=(r,t)=>({r:r.r*t.r-r.i*t.i,i:r.r*t.i+r.i*t.r}),div=(r,t)=>{var e=modulussquared(t);return{r:(r.r*t.r+r.i*t.i)/e,i:(r.i*t.r-r.r*t.i)/e}},recip=r=>{let t=modulussquared(r);return{r:r.r/t,i:-r.i/t}},neg=r=>({r:-r.r,i:-r.i}),conj=r=>({r:r.r,i:-r.i}),disk=r=>realmodulus(r)>1?NaN:{r:1,i:0},exp=r=>{let t=Math.exp(r.r);return{r:t*Math.cos(r.i),i:t*Math.sin(r.i)}},expi=r=>{let t=Math.exp(-r.i);return{r:t*Math.cos(r.r),i:t*Math.sin(r.r)}},log=r=>({r:Math.log(realmodulus(r)),i:realarg(r)}),realsinh=r=>(-Math.exp(-r)+Math.exp(r))/2,realcosh=r=>(Math.exp(-r)+Math.exp(r))/2,realtanh=r=>(1-Math.exp(-2*r))/(1+Math.exp(-2*r)),sin=r=>{let t=Math.exp(r.i),e=1/t;return{r:.5*(t+e)*Math.sin(r.r),i:.5*(t-e)*Math.cos(r.r)}},cos=r=>{let t=Math.exp(r.i),e=1/t;return{r:.5*(e+t)*Math.cos(r.r),i:.5*(e-t)*Math.sin(r.r)}},sec=r=>recip(cos(r)),csc=r=>recip(sin(r)),tan=r=>{let t=Math.exp(r.i),e=1/t,a=t+e,s=t-e,i=Math.sin(r.r),n=Math.cos(r.r);return div({r:a*i,i:s*n},{r:a*n,i:-s*i})},cot=r=>{let t=Math.exp(r.i),e=1/t,a=t+e,s=t-e,i=Math.sin(r.r),n=Math.cos(r.r);return div({r:a*n,i:-s*i},{r:a*i,i:s*n})},sinh=r=>negitimes(sin(itimes(r))),cosh=r=>cos(itimes(r)),tanh=r=>negitimes(tan(itimes(r))),coth=r=>itimes(cot(itimes(r))),sech=r=>sec(itimes(r)),csch=r=>itimes(csc(itimes(r))),intpow=(r,t)=>1==t?r:t%2==0?square(intpow(r,t/2)):t%3==0?cube(intpow(r,t/3)):t%5==0?p5(intpow(r,t/5)):mult(r,intpow(r,t-1)),realpow=(r,t)=>{if(t==Math.floor(t)){if(t>0&&t<=64)return intpow(r,t);if(t<0&&t>=-64)return recip(intpow(r,-t));if(0==t)return{r:1,i:0}}let e=realarg(r)*t,a=Math.pow(realmodulus(r),t);return{r:a*Math.cos(e),i:a*Math.sin(e)}},powreal=(r,t)=>exp(scale(Math.log(r*r),t)),pow=(r,t)=>exp(mult(t,log(r))),floor=r=>({r:Math.floor(r.r),i:Math.floor(r.i)}),ceil=r=>({r:Math.ceil(r.r),i:Math.ceil(r.i)}),square=r=>{let t=r.r*r.i;return{r:r.r*r.r-r.i*r.i,i:t+t}},cube=r=>{let t=r.r*r.r,e=r.i*r.i;return{r:r.r*(t-3*e),i:r.i*(3*t-e)}},p5=r=>{let t=r.r*r.r,e=r.i*r.i,a=t*e,s=a+a,i=t*t,n=e*e;return{r:r.r*(i+5*(n-s)),i:r.i*(n+5*(i-s))}},sqrt=r=>{let t=Math.sqrt((Math.abs(r.r)+realmodulus(r))/2),e=r.i/t/2;return r.r<0?r.i<0?{r:-e,i:-t}:{r:e,i:t}:{r:t,i:e}},itimes=r=>({r:-r.i,i:r.r}),negitimes=r=>({r:r.i,i:-r.r}),oneminus=r=>({r:1-r.r,i:-r.i}),oneplus=r=>({r:1+r.r,i:r.i}),minusone=r=>({r:r.r-1,i:r.i}),arcsin=r=>negitimes(log(add(itimes(r),sqrt(oneminus(square(r)))))),arccos=r=>negitimes(log(add(r,itimes(sqrt(oneminus(square(r))))))),arctan=r=>scale(.5,itimes(sub(log(oneminus(itimes(r))),log(oneplus(itimes(r)))))),arccot=r=>arctan(recip(r)),arcsec=r=>arccos(recip(r)),arccsc=r=>arcsin(recip(r)),arcsinh=r=>{let t=oneplus(square(r));return log(add(r,scale(Math.sqrt(realmodulus(t)),exp({r:0,i:realarg(t)/2}))))},arccosh=r=>{let t={r:r.r+1,i:r.i},e={r:r.r-1,i:r.i},a=pow(t,{r:.5,i:0}),s=pow(e,{r:.5,i:0}),i=mult(a,s);return log(add(r,i))},arctanh=r=>scale(.5,sub(log(oneplus(r)),log(oneminus(r)))),arccoth=r=>scale(.5,sub(log(oneplus(r)),log(minusone(r)))),arcsech=r=>arccosh(div({r:1,i:0},r)),arccsch=r=>negitimes(arccsc(negitimes(r))),binomial=(r,t)=>{if(0==r.i&&r.r==Math.floor(r.r)&&r.r>=0&&0==t.i&&t.r==Math.floor(t.r)&&t.r>=0&&t.r<=r.r){if(r.r<21)return{r:factorials[r.r]/factorials[t.r]/factorials[r.r-t.r],i:0};var e,a=Math.min(t.r,r.r-t.r),s=r.r,i=1;for(e=1;e<=a;++e)i=i*(s-(a-e))/e;return{r:i,i:0}}return div(gamma(oneplus(r)),mult(gamma(oneplus(t)),gamma(oneplus(sub(r,t)))))},factorial=r=>0==r.i&&r.r==Math.floor(r.r)&&r.r>=0&&r.r<factorials.length?{r:factorials[r.r],i:0}:gamma(oneplus(r)),gamma=r=>{let t=Math.sqrt(2*Math.PI),e=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,1.5056327351493116e-7];if(r.r<.5)return scale(Math.PI,recip(mult(sin(scale(Math.PI,r)),gamma(oneminus(r)))));let a,s,i=minusone(r),n={r:e[0],i:0};for(a=1;a<9;++a)n=add(n,scale(e[a],recip({r:i.r+a,i:i.i})));return s={r:i.r+7+.5,i:i.i},scale(t,mult(mult(pow(s,{r:i.r+.5,i:i.i}),exp(neg(s))),n))},sn=(r,t)=>{"object"==typeof t&&(t=t.r);let e=Math.sqrt(1-t*t),a=realellipj(r.r,t),s=realellipj(r.i,e),i=1-a.dn*a.dn*s.sn*s.sn;return{r:a.sn*s.dn/i,i:a.cn*a.dn*s.sn*s.cn/i}},cn=(r,t)=>{"object"==typeof t&&(t=t.r);let e=Math.sqrt(1-t*t),a=realellipj(r.r,t),s=realellipj(r.i,e),i=1-a.dn*a.dn*s.sn*s.sn;return{r:a.cn*s.cn/i,i:-a.sn*a.dn*s.sn*s.dn/i}},dn=(r,t)=>{"object"==typeof t&&(t=t.r);let e=Math.sqrt(1-t*t),a=realellipj(r.r,t),s=realellipj(r.i,e),i=1-a.dn*a.dn*s.sn*s.sn;return{r:a.dn*s.cn*s.dn/i,i:-t*t*a.sn*a.cn*s.sn/i}},realellipj=(r,e)=>{let a,s,i,n,l,o,u=[],c=[];if(e<0||e>1)return{sn:NaN,cn:NaN,ph:NaN,dn:NaN};if(e<1e-9)return t=Math.sin(r),i=Math.cos(r),{sn:t-(a=.25*e*(r-t*i))*i,cn:i+a*t,ph:r-a,dn:1-.5*e*t*t};if(e>=.9999999999)return a=.25*(1-e),i=realcosh(r),s=a*(t=realtanh(r))*(n=1/i),l=i*realsinh(r),{sn:t+a*(l-r)/(i*i),ph:2*Math.atan(Math.exp(r))-Math.PI/2+a*(l-r)/i,cn:n-s*(l-r),dn:n+s*(l+r)};for(u[0]=1,i=Math.sqrt(1-e),c[0]=Math.sqrt(e),l=1,o=0;Math.abs(c[o]/u[o])>2.22045e-16&&o<8;)a=u[o],c[++o]=(a-i)/2,t=Math.sqrt(a*i),u[o]=(a+i)/2,i=t,l*=2;n=l*u[o]*r;do{t=c[o]*Math.sin(n)/u[o],i=n,n=(Math.asin(t)+n)/2}while(--o);return t=Math.cos(n),{sn:Math.sin(n),cn:t,dn:t/Math.cos(n-i),ph:n}},sum=(r,t,e)=>{let a,s,i=0,n=0,l=Math.floor(e.r);for(a=0;a<l;++a)i+=(s=t(r,{r:a,i:0})).r,n+=s.i;return{r:i,i:n}},iter=(r,t,e,a)=>{let s,i=e,n=Math.floor(a.r);for(s=0;s<n;++s)i=t(r,i,{r:s,i:0});return i},prod=(r,t,e)=>{let a,s=t(r,{r:1,i:0}),i=Math.floor(e.r);if(i<1)return alert("Enter an integer greater than 1"),null;if(1===i)return t(r,{r:1,i:0});for(a=2;a<=i;++a)s=mult(s,t(r,{r:a,i:0}));return s},psymbol=(r,t)=>{let e,a={r:1,i:0},s=Math.floor(t.r);if(s<0)return NaN;if(0===s)return{r:1,i:0};for(e=1;e<=s;++e)a=mult(a,add(r,{r:e-1,i:0}));return a},mobius=(r,t,e,a,s)=>{let i=add(mult(t,r),e),n=add(mult(a,r),s),l=sub(mult(t,s),mult(e,a));return 0===l.r&&0===l.i?NaN:div(i,n)},rationalBlaschke=(r,t)=>{let e=div(sub(r,t),sub({r:1,i:0},mult(conj(t),r))),a=div(modulus(t),t);return mult(e,a)},blaschke=(r,t)=>{let e,a=rationalBlaschke(r,ai[0]),s=Math.floor(t.r);if(s<1||100<s)return NaN;for(e=1;e<s;e++)a=mult(a,rationalBlaschke(r,ai[e]));return mult({r:.0256,i:.1321},a)},binet=r=>{let t=1/Math.pow(5,.5);return scale(t,sub(pow(consts.phi,r),pow(consts.invphi,r)))},joukowsky=(r,t,e)=>{let a,s={r:1,i:0},i={r:e.r,i:0},n={r:t.r,i:t.i},l=sqrt(sub(square(r),{r:4,i:0})),o=div(sub(r,l),{r:2,i:0}),u=div(add(r,l),{r:2,i:0}),c=sub(o,n),p=sub(u,n);return a=realmodulus(c)>realmodulus(p)?div(sub(o,n),i):div(sub(u,n),i),realmodulus(a)<realmodulus(s)?NaN:add(a,div(s,a))},abs=r=>0===r.r&&0===r.i?0:Math.abs(r.r)<Math.abs(r.i)?Math.abs(r.i)*Math.sqrt(1+(r.r/r.i)**2):Math.abs(r.r)*Math.sqrt(1+(r.i/r.r)**2),zeta=r=>{let t={r:2,i:0},e={r:1,i:0},a={r:-1,i:0};if(r.r<0){let a=mult(pow(t,r),pow(consts.pi,sub(r,e))),s=mult(sin(mult(div(consts.pi,t),r)),gamma(sub(e,r))),i=mult(s,zeta(sub(e,r)));return mult(a,i)}{let i={r:0,i:0};for(var s=0;s<15;s++){let t={r:s,i:0};i=add(i,div(mult(pow(a,t),sub(dk[s],dk[15])),pow(add(t,e),r)))}return div(div(i,mult(a,dk[15])),sub(e,pow(t,sub(e,r))))}},dirichletEta=r=>{let t={r:1,i:0};return mult(zeta(r),sub(t,pow({r:2,i:0},sub(t,r))))},splitwords=r=>{let t=r.text,e=[];for(let a=0;a<t.length;){let s=!1;for(let i=t.length;i>a;--i){let n=t.substring(a,i);if(symbols.hasOwnProperty(n)){e.push({spaced:0==a&&r.spaced,text:n}),a=i,s=!0;break}}if(!s){e.push({spaced:0==a&&r.spaced,text:t.substring(a)});break}}return e},tokenize=r=>{let t,e=/(\s*)(?:((?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?|\*\*|[-+()^|,*\/!]|[a-zA-Z_]+'?)|(\S.*))/g,a=[];for(;null!==(t=e.exec(r));){if(t[3])return null;if(t[2]){let r={spaced:t[1]&&t[1].length>0,text:t[2]};/^\w/.exec(r.text)?a.push.apply(a,splitwords(r)):a.push(r)}}return a},parsesum=(r,t)=>{let e=null,a=null;for(;;){let i=parseproduct(r,t);if(null===i)return null;if(e=null===e?i:compose(a,[e,i]),r.j<r.tok.length){var s=r.tok[r.j];if("+"==s.text||"-"==s.text){a="+"==s.text?"add":"sub",r.j+=1;continue}}break}return e},parseproduct=(r,t)=>{let e=null,a=-1,s=null;for(;;){let n=parseunary(r,a>=0,t);if(null===n)return r.j==a?e:null;if(e=null===e?n:compose(s,[e,n]),r.j<r.tok.length){var i=r.tok[r.j];if("*"==i.text||"/"==i.text){s="*"==i.text?"mult":"div",r.j+=1,a=-1;continue}if(!t||"|"!=i.text){s="mult",a=r.j;continue}}break}return e},parseunary=(r,t,e)=>{if(r.j<r.tok.length){var a=r.tok[r.j];if(!t&&"-"==a.text){r.j+=1;var s=parseunary(r,e);return null===s?null:compose("neg",[s])}}return parsetightproduct(r,e)},parsetightproduct=(r,t)=>{let e=null,a=-1;for(;;){let i=parsepower(r,t);if(null===i)return r.j==a?e:null;if(e=null===e?i:compose("mult",[e,i]),r.j<r.tok.length){var s=r.tok[r.j];if(/^[\w\d\.]/.exec(s.text)&&!s.spaced){a=r.j;continue}}break}return e},parsepower=(r,t)=>{let e=parsesuffixed(r,t);if(null===e)return null;if(r.j<r.tok.length){let a=r.tok[r.j];if("^"==a.text||"**"==a.text){r.j+=1;let a=parseunary(r,t);return null===a?null:compose("pow",[e,a])}}return e},parsesuffixed=(r,t)=>{let e=parseunit(r);if(null===e)return null;let a=!0;for(;a;){if(a=!1,r.j<r.tok.length&&"*"==r.tok[r.j].text){let s=!0;if(r.j+1>=r.tok.length)s=!1;else{let e=r.tok[r.j+1];(")"==e.text||"*"==e.text||"/"==e.text||"+"==e.text||"-"==e.text||"^"==e.text||t&&"|"==e.text)&&(s=!1)}s||(r.j+=1,e=compose("conj",[e]),a=!0)}r.j<r.tok.length&&"!"==r.tok[r.j].text&&(r.j+=1,e=compose("factorial",[e]),a=!0)}return e},parseunit=r=>{if(r.j>=r.tok.length)return null;let t,e=r.tok[r.j];if(/^\d|\./.exec(e.text))return r.j+=1,composereal(parseFloat(e.text));if(/^\w/.exec(e.text)){if(r.j+=1,r.j<r.tok.length&&"("==r.tok[r.j].text&&funcs.hasOwnProperty(e.text)){let t=funcs[e.text],a=[];if(r.j+=1,0==t){if(r.j>=r.tok.length||")"!=r.tok[r.j].text)return null;r.j+=1}for(;t>0;){let s=parsesum(r,!1);if(null==s)return null;if(a.push(s),t-=1,r.j>=r.tok.length||r.tok[r.j].text!=(t?",":")")){if(!(loops.hasOwnProperty(e.text)&&r.j<r.tok.length&&")"==r.tok[r.j].text))return null;for(;t>1;)a.push(composereal(0)),t-=1;a.push({expr:"n",vars:{n:"n"},val:null}),t-=1}r.j+=1}if(loops.hasOwnProperty(e.text)){let r={};dictadd(r,a[0].vars);let t="function(z,n)";delete r.n,"iter"==e.text&&(t="function(z,zp,n)",delete r["z'"]);let s=["z",t+"{return "+a[0].expr+";}"];for(let t=1;t<a.length;++t)dictadd(r,a[t].vars),s.push(a[t].expr);return{expr:e.text+"("+s.join(",")+")",vars:r,val:null}}let s=e.text;return syns.hasOwnProperty(s)&&(s=syns[s]),compose(s,a)}if(vars.hasOwnProperty(e.text)){let r={};return r[e.text]=vars[e.text],{expr:vars[e.text],vars:r,val:null}}if(consts.hasOwnProperty(e.text)){let r=consts[e.text];return{expr:"{r:"+r.r+",i:"+r.i+"}",vars:{},val:r}}}return"("==e.text||"|"==e.text?(r.j+=1,t=parsesum(r,"|"==e.text),r.j>=r.tok.length||r.tok[r.j].text!=("|"==e.text?"|":")")?null:(r.j+=1,"|"==e.text?compose("modulus",[t]):t)):null},composereal=r=>({expr:"{r:"+r+",i:0}",vars:{},val:{r:r,i:0}}),compose=(fname,args)=>{let vs={},ae=[],av=[],vl=null,valcount=0,fn=eval(fname);for(let r=0;r<args.length;++r)dictadd(vs,args[r].vars),ae.push(args[r].expr),av.push(args[r].val),null!==args[r].val&&++valcount;if(0==dictsize(vs)&&valcount==args.length&&args.length>0)return vl=fn.apply(null,av),{expr:"{r:"+vl.r+",i:"+vl.i+"}",vars:vs,val:vl};if((fn===mult||fn===div)&&isreal(1,av[1]))return args[0];if(fn===mult&&null!==av[0]&&0==av[0].i)return isreal(1,av[0])?args[1]:{expr:"scale("+av[0].r+","+ae[1]+")",vars:vs,val:null};if(fn===div&&null!==av[1]&&0==av[1].i&&0!=av[1].r)return isreal(1,av[1])?args[1]:{expr:"scale("+1/av[1].r+","+ae[0]+")",vars:vs,val:null};if(fn===div&&null!==av[0]&&0==av[0].i){let r=compose("recip",[args[1]]);return isreal(1,av[0])?r:{expr:"scale("+av[0].r+","+r.expr+")",vars:vs,val:null}}if(fn===pow){if(isreal(-1,av[1]))return compose("recip",[args[0]]);if(isreal(0,av[1]))return composereal(1);if(isreal(.5,av[1]))return compose("sqrt",[args[0]]);if(isreal(1,av[1]))return args[0];if(isreal(2,av[1]))return compose("square",[args[0]]);if(isreal(3,av[1]))return compose("cube",[args[0]]);if(isreal(4,av[1]))return compose("square",[compose("square",[args[0]])]);if(isreal(5,av[1]))return compose("p5",[args[0]]);if(isreal(6,av[1]))return compose("square",[compose("cube",[args[0]])]);if(isreal(Math.E,av[0]))return compose("exp",[args[1]])}return{expr:fname+"("+ae.join(",")+")",vars:vs,val:null}},isreal=(r,t)=>null!==t&&0==t.i&&t.r==r,dictsize=r=>{let t,e=0;for(t in r)r.hasOwnProperty(t)&&++e;return e},dictadd=(r,t)=>{for(key in t)t.hasOwnProperty(key)&&(r[key]=t[key])};return run()};